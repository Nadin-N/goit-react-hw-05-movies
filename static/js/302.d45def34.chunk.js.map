{"version":3,"file":"static/js/302.d45def34.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport const MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {movies.map(movie => {\r\n        return (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n              {movie.title}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchform\":\"MovieSearch_searchform__834LF\",\"searchButton\":\"MovieSearch_searchButton__+6+iI\",\"searchInput\":\"MovieSearch_searchInput__XpEHP\"};","import { PropTypes } from 'prop-types';\r\nimport { useState } from 'react';\r\nimport css from './MovieSearch.module.css';\r\n\r\nexport const MovieSearch = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState([]);\r\n\r\n  const handleInputChange = e => {\r\n    const { value } = e.target;\r\n    setQuery(value);\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      return;\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.searchform} onSubmit={handleFormSubmit}>\r\n      <input\r\n        className={css.searchInput}\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search movie\"\r\n        name=\"query\"\r\n        value={query}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button className={css.searchButton} type=\"submit\"></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nMovieSearch.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport { fetchMovieByQuery } from 'services/api';\r\n\r\nimport { MovieSearch } from 'components/MovieSearch/MovieSearch';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\n\r\nfunction MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    const query = searchParams.get('query');\r\n    if (!query) return;\r\n    const getMovieByQuery = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const { results } = await fetchMovieByQuery(query);\r\n\r\n        setMovies(results);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getMovieByQuery();\r\n  }, [searchParams]);\r\n\r\n  const handleSubmit = query => {\r\n    setSearchParams({ query });\r\n  };\r\n  return (\r\n    <section>\r\n      <MovieSearch onSubmit={handleSubmit} />\r\n      {isLoading && <Loader />}\r\n      {error && (\r\n        <p>Sorry, an error occurred! Error: {error} Please try again later!</p>\r\n      )}\r\n      {movies.length > 0 && <MoviesList movies={movies} />}\r\n    </section>\r\n  );\r\n}\r\nexport default MoviesPage;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '1deae1a36202e3ac8c29219a3d453e0f';\r\n\r\nexport const fetchPopularMovies = async () => {\r\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieDetails = async id => {\r\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieActors = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\nexport const fetchMovieByQuery = async query => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?query=${query}&api_key=${API_KEY}`\r\n  );\r\n  console.log(data);\r\n  return data;\r\n};\r\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","MovieSearch","onSubmit","useState","query","setQuery","className","css","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovieByQuery","fetchMovieByQuery","results","message","Loader","length","axios","API_KEY","fetchPopularMovies","data","fetchMovieDetails","fetchMovieActors","fetchMovieReviews","console","log"],"sourceRoot":""}