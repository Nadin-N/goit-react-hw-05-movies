{"version":3,"file":"static/js/161.4f63fc8b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/pageStyles/MovieDetailsPage.module.css?1948","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsWrap\":\"MovieDetails_detailsWrap__9Q+4M\",\"score\":\"MovieDetails_score__67zDg\",\"desc\":\"MovieDetails_desc__3wF2C\",\"about\":\"MovieDetails_about__favS1\",\"imgWrap\":\"MovieDetails_imgWrap__o-tMY\"};","import { PropTypes } from 'prop-types';\r\nimport css from './MovieDetails.module.css';\r\n\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const MovieDetails = ({\r\n  posterPath = `/ngl2FKBlU4fhbdsrtdom9LVLBXw.jpg`,\r\n  title,\r\n  voteAverage,\r\n  overview,\r\n  genres = [],\r\n}) => {\r\n  const finalImageUrl = `${IMG_URL + posterPath}`;\r\n  const userScore = Number((voteAverage * 10).toFixed(0));\r\n  const allGenres = genres.map(genre => genre.name).join(', ');\r\n\r\n  return (\r\n    <div className={css.detailsWrap}>\r\n      <div className={css.imgWrap}>\r\n        {posterPath && (\r\n          <img src={finalImageUrl} alt={`poster of ${title} movie`} />\r\n        )}\r\n      </div>\r\n      <div className={css.about}>\r\n        <h2>{title}</h2>\r\n        <p className={css.score}>{userScore}%</p>\r\n        <h3>Overview</h3>\r\n        <p className={css.desc}>{overview}</p>\r\n        <h3>Genres</h3>\r\n        <p className={css.desc}>{allGenres}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nMovieDetails.propTypes = {\r\n  posterPath: PropTypes.string,\r\n  title: PropTypes.string,\r\n  voteAverage: PropTypes.number,\r\n  overview: PropTypes.string,\r\n  genres: PropTypes.arrayOf(PropTypes.any),\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonBack\":\"MovieDetailsPage_buttonBack__CEsdx\"};","import { useEffect, useState } from 'react';\r\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\r\nimport { fetchMovieDetails } from 'services/api';\r\n\r\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport css from './pageStyles/MovieDetailsPage.module.css';\r\n\r\nfunction MovieDetailsPage() {\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n\r\n  const goBackLink = location?.state?.from ?? '/';\r\n\r\n  useEffect(() => {\r\n    const getMovieById = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const movie = await fetchMovieDetails(id);\r\n\r\n        setMovie(movie);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getMovieById(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <section>\r\n      {isLoading && <Loader />}\r\n      {error && (\r\n        <p>Sorry, an error occurred! Error: {error} Please try again later!</p>\r\n      )}\r\n      <>\r\n        <div className={css.buttonBack}>\r\n          <NavLink to={goBackLink}>Go back</NavLink>\r\n        </div>\r\n        <MovieDetails\r\n          posterPath={movie.poster_path}\r\n          title={movie.original_title}\r\n          voteAverage={movie.vote_average}\r\n          overview={movie.overview}\r\n          genres={movie.genres}\r\n        />\r\n        <div>\r\n          <h3>Additional information</h3>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"cast\" state={{ from: location?.state?.from ?? '/' }}>\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"reviews\"\r\n                state={{ from: location?.state?.from ?? '/' }}\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <Outlet />\r\n        </div>\r\n      </>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '1deae1a36202e3ac8c29219a3d453e0f';\r\n\r\nexport const fetchPopularMovies = async () => {\r\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieDetails = async id => {\r\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieActors = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\nexport const fetchMovieByQuery = async query => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?query=${query}&api_key=${API_KEY}`\r\n  );\r\n  console.log(data);\r\n  return data;\r\n};\r\n"],"names":["MovieDetails","posterPath","title","voteAverage","overview","genres","finalImageUrl","userScore","Number","toFixed","allGenres","map","genre","name","join","className","css","src","alt","useState","movie","setMovie","isLoading","setIsLoading","error","setError","id","useParams","location","useLocation","goBackLink","state","from","useEffect","getMovieById","fetchMovieDetails","message","Loader","to","poster_path","original_title","vote_average","axios","API_KEY","fetchPopularMovies","data","fetchMovieActors","fetchMovieReviews","fetchMovieByQuery","query","console","log"],"sourceRoot":""}