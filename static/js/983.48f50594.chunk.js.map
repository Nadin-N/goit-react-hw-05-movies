{"version":3,"file":"static/js/983.48f50594.chunk.js","mappings":"2LACA,EAA4B,yBAA5B,EAA+D,uBAA/D,EAAuG,8B,SCK1FA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GACV,IAAMC,EAAa,UAPX,kCAO2BD,EAAME,aACzC,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAAhD,WACE,gBACEY,IACEP,EAAME,YACFD,EACA,wNAENO,IAAKR,EAAMS,MACXZ,UAAWC,KAGb,gBAAKD,UAAWC,EAAhB,SAAqCE,EAAMS,YAZtCT,EAAMI,GAgBlB,KAGN,C,kHCOD,UAlCA,WACE,OAAkCM,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAemB,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBL,GAAa,GADG,SAGdA,GAAa,GAHC,UAMJM,EAAAA,EAAAA,MANI,gBAKKxB,EALL,EAKZyB,KAAQC,QAEVP,EAAUnB,GAPI,kDASdqB,EAAS,KAAMM,SATD,yBAWdT,GAAa,GAXC,6EAAH,qDAcfK,GACD,GAAE,KAGD,gCACE,4CACCN,IAAa,SAAC,IAAD,IACbG,IACC,6DAAqCA,EAArC,+BAEF,SAAC,IAAD,CAAYpB,OAAQA,MAGzB,C,+LCpCD4B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAkB,mCAAG,oGACbI,EAAAA,EAAAA,IAAA,sCAAyCC,IAD5B,cAC1BJ,EAD0B,yBAEzBA,GAFyB,2CAAH,qDAKlBK,EAAiB,mCAAG,WAAMpB,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IAD1B,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMrB,GAAN,yFACPkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADnC,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBO,EAAiB,mCAAG,WAAMtB,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA0CmB,IADlC,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAIjBQ,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,8BACEM,EADF,oBACmBL,IAFX,uBACvBJ,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/Movie.module.css?61b4","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movie_movieList__edbJ5\",\"listImg\":\"Movie_listImg__9UxCo\",\"movieListTitle\":\"Movie_movieListTitle__9zwYr\"};","import { PropTypes } from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport css from './Movie.module.css';\r\n\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nexport const MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={css.movieList}>\r\n      {movies.map(movie => {\r\n        const finalImageUrl = `${IMG_URL + movie.poster_path}`;\r\n        return (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n              <img\r\n                src={\r\n                  movie.poster_path\r\n                    ? finalImageUrl\r\n                    : 'https://media.istockphoto.com/id/911590226/vector/movie-time-vector-illustration-cinema-poster-concept-on-red-round-background-composition-with.jpg?s=612x612&w=0&k=20&c=QMpr4AHrBgHuOCnv2N6mPUQEOr5Mo8lE7TyWaZ4r9oo='\r\n                }\r\n                alt={movie.title}\r\n                className={css.listImg}\r\n              />\r\n\r\n              <div className={css.movieListTitle}>{movie.title}</div>\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { fetchPopularMovies } from 'services/api';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nfunction Home() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        setIsLoading(true);\r\n        const {\r\n          data: { results: movies },\r\n        } = await fetchPopularMovies();\r\n        setMovies(movies);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h2>Trending today:</h2>\r\n      {isLoading && <Loader />}\r\n      {error && (\r\n        <p>Sorry, an error occurred! Error: {error} Please try again later!</p>\r\n      )}\r\n      <MoviesList movies={movies}></MoviesList>\r\n    </section>\r\n  );\r\n}\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '1deae1a36202e3ac8c29219a3d453e0f';\r\n\r\nexport const fetchPopularMovies = async () => {\r\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieDetails = async id => {\r\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieActors = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const fetchMovieReviews = async id => {\r\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\nexport const fetchMovieByQuery = async query => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?query=${query}&api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","finalImageUrl","poster_path","to","id","state","from","src","alt","title","useState","isLoading","setIsLoading","setMovies","error","setError","useEffect","getMovies","fetchPopularMovies","data","results","message","axios","API_KEY","fetchMovieDetails","fetchMovieActors","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}